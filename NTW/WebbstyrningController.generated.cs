// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance

using Telia.NTW.Web.ViewModel.Webbstyrning.Webbstyrning;
#pragma warning disable 1591, 3008, 3009
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace Telia.NTW.Web.Controllers
{
    public partial class WebbstyrningController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected WebbstyrningController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Abonnemang()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Abonnemang);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual Sigma.Utils.ActionResults.ExcelActionResult Abonnemang_ExportToExcel()
        {
            return new T4MVC_Sigma_Utils_ActionResults_ExcelActionResult(Area, Name, ActionNames.Abonnemang_ExportToExcel);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Kö_Create()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Kö_Create);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Kö_Edit()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Kö_Edit);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Kö_Delete()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Kö_Delete);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Alternativ_View()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Alternativ_View);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Alternativ_Edit()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Alternativ_Edit);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult Alternativ_Data()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.Alternativ_Data);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Alternativ_Create()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Alternativ_Create);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Alternativ_Delete()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Alternativ_Delete);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public WebbstyrningController Actions { get { return MVC.Webbstyrning; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Webbstyrning";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Webbstyrning";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string Index_ExportToExcel = "Index_ExportToExcel";
            public readonly string Abonnemang = "Abonnemang";
            public readonly string Abonnemang_ExportToExcel = "Abonnemang_ExportToExcel";
            public readonly string Kö_Create = "Kö_Create";
            public readonly string Kö_Edit = "Kö_Edit";
            public readonly string Kö_Delete = "Kö_Delete";
            public readonly string Alternativ_View = "Alternativ_View";
            public readonly string Alternativ_Edit = "Alternativ_Edit";
            public readonly string Alternativ_Data = "Alternativ_Data";
            public readonly string Alternativ_Create = "Alternativ_Create";
            public readonly string Alternativ_Delete = "Alternativ_Delete";
            public readonly string EjVerkställdaStyrningar = "EjVerkställdaStyrningar";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string Index_ExportToExcel = "Index_ExportToExcel";
            public const string Abonnemang = "Abonnemang";
            public const string Abonnemang_ExportToExcel = "Abonnemang_ExportToExcel";
            public const string Kö_Create = "Kö_Create";
            public const string Kö_Edit = "Kö_Edit";
            public const string Kö_Delete = "Kö_Delete";
            public const string Alternativ_View = "Alternativ_View";
            public const string Alternativ_Edit = "Alternativ_Edit";
            public const string Alternativ_Data = "Alternativ_Data";
            public const string Alternativ_Create = "Alternativ_Create";
            public const string Alternativ_Delete = "Alternativ_Delete";
            public const string EjVerkställdaStyrningar = "EjVerkställdaStyrningar";
        }


        static readonly ActionParamsClass_Abonnemang s_params_Abonnemang = new ActionParamsClass_Abonnemang();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Abonnemang AbonnemangParams { get { return s_params_Abonnemang; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Abonnemang
        {
            public readonly string serviceId = "serviceId";
            public readonly string abonnemang = "abonnemang";
            public readonly string errorMessages = "errorMessages";
        }
        static readonly ActionParamsClass_Abonnemang_ExportToExcel s_params_Abonnemang_ExportToExcel = new ActionParamsClass_Abonnemang_ExportToExcel();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Abonnemang_ExportToExcel Abonnemang_ExportToExcelParams { get { return s_params_Abonnemang_ExportToExcel; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Abonnemang_ExportToExcel
        {
            public readonly string serviceId = "serviceId";
            public readonly string abonnemang = "abonnemang";
        }
        static readonly ActionParamsClass_Kö_Create s_params_Kö_Create = new ActionParamsClass_Kö_Create();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Kö_Create Kö_CreateParams { get { return s_params_Kö_Create; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Kö_Create
        {
            public readonly string abonnemang = "abonnemang";
            public readonly string serviceId = "serviceId";
            public readonly string viewModel = "viewModel";
        }
        static readonly ActionParamsClass_Kö_Edit s_params_Kö_Edit = new ActionParamsClass_Kö_Edit();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Kö_Edit Kö_EditParams { get { return s_params_Kö_Edit; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Kö_Edit
        {
            public readonly string abonnemang = "abonnemang";
            public readonly string serviceId = "serviceId";
            public readonly string begärtDatum = "begärtDatum";
            public readonly string alternativId = "alternativId";
            public readonly string viewModel = "viewModel";
            public readonly string styrningsId = "styrningsId";
        }
        static readonly ActionParamsClass_Kö_Delete s_params_Kö_Delete = new ActionParamsClass_Kö_Delete();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Kö_Delete Kö_DeleteParams { get { return s_params_Kö_Delete; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Kö_Delete
        {
            public readonly string id = "id";
            public readonly string id2 = "id2";
            public readonly string id3 = "id3";
            public readonly string id4 = "id4";
            public readonly string id5 = "id5";
        }
        static readonly ActionParamsClass_Alternativ_View s_params_Alternativ_View = new ActionParamsClass_Alternativ_View();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Alternativ_View Alternativ_ViewParams { get { return s_params_Alternativ_View; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Alternativ_View
        {
            public readonly string connectLinkId = "connectLinkId";
            public readonly string lopnummer = "lopnummer";
            public readonly string alternativnummer = "alternativnummer";
            public readonly string namn = "namn";
            public readonly string index = "index";
            public readonly string status = "status";
            public readonly string abonnemang = "abonnemang";
            public readonly string serviceId = "serviceId";
        }
        static readonly ActionParamsClass_Alternativ_Edit s_params_Alternativ_Edit = new ActionParamsClass_Alternativ_Edit();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Alternativ_Edit Alternativ_EditParams { get { return s_params_Alternativ_Edit; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Alternativ_Edit
        {
            public readonly string connectLinkId = "connectLinkId";
            public readonly string lopnummer = "lopnummer";
            public readonly string alternativnummer = "alternativnummer";
            public readonly string namn = "namn";
            public readonly string index = "index";
            public readonly string status = "status";
            public readonly string abonnemang = "abonnemang";
            public readonly string serviceId = "serviceId";
        }
        static readonly ActionParamsClass_Alternativ_Data s_params_Alternativ_Data = new ActionParamsClass_Alternativ_Data();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Alternativ_Data Alternativ_DataParams { get { return s_params_Alternativ_Data; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Alternativ_Data
        {
            public readonly string connectLinkId = "connectLinkId";
            public readonly string original = "original";
            public readonly string styrningsalternativ = "styrningsalternativ";
        }
        static readonly ActionParamsClass_Alternativ_Create s_params_Alternativ_Create = new ActionParamsClass_Alternativ_Create();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Alternativ_Create Alternativ_CreateParams { get { return s_params_Alternativ_Create; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Alternativ_Create
        {
            public readonly string serviceId = "serviceId";
            public readonly string abonnemang = "abonnemang";
        }
        static readonly ActionParamsClass_Alternativ_Delete s_params_Alternativ_Delete = new ActionParamsClass_Alternativ_Delete();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Alternativ_Delete Alternativ_DeleteParams { get { return s_params_Alternativ_Delete; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Alternativ_Delete
        {
            public readonly string id = "id";
            public readonly string id2 = "id2";
            public readonly string id3 = "id3";
            public readonly string id4 = "id4";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string _Alternativ_EditForm = "_Alternativ_EditForm";
                public readonly string _Alternativ_List = "_Alternativ_List";
                public readonly string _Alternativ_Tree_Edit = "_Alternativ_Tree_Edit";
                public readonly string _Alternativ_Tree_View = "_Alternativ_Tree_View";
                public readonly string _Historik = "_Historik";
                public readonly string _Kö_EditForm = "_Kö_EditForm";
                public readonly string _Kö_List = "_Kö_List";
                public readonly string _Log = "_Log";
                public readonly string _Svarsställen = "_Svarsställen";
                public readonly string Abonnemang = "Abonnemang";
                public readonly string Alternativ_Create = "Alternativ_Create";
                public readonly string Alternativ_Edit = "Alternativ_Edit";
                public readonly string Alternativ_View = "Alternativ_View";
                public readonly string EjVerkställdaStyrningar = "EjVerkställdaStyrningar";
                public readonly string Index = "Index";
                public readonly string Kö_Create = "Kö_Create";
                public readonly string Kö_Edit = "Kö_Edit";
            }
            public readonly string _Alternativ_EditForm = "~/Views/Webbstyrning/_Alternativ_EditForm.cshtml";
            public readonly string _Alternativ_List = "~/Views/Webbstyrning/_Alternativ_List.cshtml";
            public readonly string _Alternativ_Tree_Edit = "~/Views/Webbstyrning/_Alternativ_Tree_Edit.cshtml";
            public readonly string _Alternativ_Tree_View = "~/Views/Webbstyrning/_Alternativ_Tree_View.cshtml";
            public readonly string _Historik = "~/Views/Webbstyrning/_Historik.cshtml";
            public readonly string _Kö_EditForm = "~/Views/Webbstyrning/_Kö_EditForm.cshtml";
            public readonly string _Kö_List = "~/Views/Webbstyrning/_Kö_List.cshtml";
            public readonly string _Log = "~/Views/Webbstyrning/_Log.cshtml";
            public readonly string _Svarsställen = "~/Views/Webbstyrning/_Svarsställen.cshtml";
            public readonly string Abonnemang = "~/Views/Webbstyrning/Abonnemang.cshtml";
            public readonly string Alternativ_Create = "~/Views/Webbstyrning/Alternativ_Create.cshtml";
            public readonly string Alternativ_Edit = "~/Views/Webbstyrning/Alternativ_Edit.cshtml";
            public readonly string Alternativ_View = "~/Views/Webbstyrning/Alternativ_View.cshtml";
            public readonly string EjVerkställdaStyrningar = "~/Views/Webbstyrning/EjVerkställdaStyrningar.cshtml";
            public readonly string Index = "~/Views/Webbstyrning/Index.cshtml";
            public readonly string Kö_Create = "~/Views/Webbstyrning/Kö_Create.cshtml";
            public readonly string Kö_Edit = "~/Views/Webbstyrning/Kö_Edit.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_WebbstyrningController : Telia.NTW.Web.Controllers.WebbstyrningController
    {
        public T4MVC_WebbstyrningController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            IndexOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void Index_ExportToExcelOverride(T4MVC_Sigma_Utils_ActionResults_ExcelActionResult callInfo);

        [NonAction]
        public override Sigma.Utils.ActionResults.ExcelActionResult Index_ExportToExcel()
        {
            var callInfo = new T4MVC_Sigma_Utils_ActionResults_ExcelActionResult(Area, Name, ActionNames.Index_ExportToExcel);
            Index_ExportToExcelOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void AbonnemangOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, decimal serviceId, string abonnemang, System.Collections.Generic.List<string> errorMessages);

        [NonAction]
        public override System.Web.Mvc.ActionResult Abonnemang(decimal serviceId, string abonnemang, System.Collections.Generic.List<string> errorMessages)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Abonnemang);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "serviceId", serviceId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "abonnemang", abonnemang);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "errorMessages", errorMessages);
            AbonnemangOverride(callInfo, serviceId, abonnemang, errorMessages);
            return callInfo;
        }

        [NonAction]
        partial void Abonnemang_ExportToExcelOverride(T4MVC_Sigma_Utils_ActionResults_ExcelActionResult callInfo, decimal serviceId, string abonnemang);

        [NonAction]
        public override Sigma.Utils.ActionResults.ExcelActionResult Abonnemang_ExportToExcel(decimal serviceId, string abonnemang)
        {
            var callInfo = new T4MVC_Sigma_Utils_ActionResults_ExcelActionResult(Area, Name, ActionNames.Abonnemang_ExportToExcel);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "serviceId", serviceId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "abonnemang", abonnemang);
            Abonnemang_ExportToExcelOverride(callInfo, serviceId, abonnemang);
            return callInfo;
        }

        [NonAction]
        partial void Kö_CreateOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string abonnemang, decimal serviceId);

        [NonAction]
        public override System.Web.Mvc.ActionResult Kö_Create(string abonnemang, decimal serviceId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Kö_Create);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "abonnemang", abonnemang);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "serviceId", serviceId);
            Kö_CreateOverride(callInfo, abonnemang, serviceId);
            return callInfo;
        }

        [NonAction]
        partial void Kö_CreateOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, KöEditViewModel viewModel);

        [NonAction]
        public override System.Web.Mvc.ActionResult Kö_Create(KöEditViewModel viewModel)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Kö_Create);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "viewModel", viewModel);
            Kö_CreateOverride(callInfo, viewModel);
            return callInfo;
        }

        [NonAction]
        partial void Kö_EditOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string abonnemang, decimal serviceId, System.DateTime begärtDatum, decimal alternativId);

        [NonAction]
        public override System.Web.Mvc.ActionResult Kö_Edit(string abonnemang, decimal serviceId, System.DateTime begärtDatum, decimal alternativId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Kö_Edit);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "abonnemang", abonnemang);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "serviceId", serviceId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "begärtDatum", begärtDatum);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "alternativId", alternativId);
            Kö_EditOverride(callInfo, abonnemang, serviceId, begärtDatum, alternativId);
            return callInfo;
        }

        [NonAction]
        partial void Kö_EditOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, KöEditViewModel viewModel, decimal styrningsId);

        [NonAction]
        public override System.Web.Mvc.ActionResult Kö_Edit(KöEditViewModel viewModel, decimal styrningsId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Kö_Edit);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "viewModel", viewModel);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "styrningsId", styrningsId);
            Kö_EditOverride(callInfo, viewModel, styrningsId);
            return callInfo;
        }

        [NonAction]
        partial void Kö_DeleteOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string id, string id2, string id3, string id4, string id5);

        [NonAction]
        public override System.Web.Mvc.ActionResult Kö_Delete(string id, string id2, string id3, string id4, string id5)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Kö_Delete);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id2", id2);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id3", id3);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id4", id4);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id5", id5);
            Kö_DeleteOverride(callInfo, id, id2, id3, id4, id5);
            return callInfo;
        }

        [NonAction]
        partial void Alternativ_ViewOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, decimal connectLinkId, int lopnummer, string alternativnummer, string namn, string index, string status, string abonnemang, decimal serviceId);

        [NonAction]
        public override System.Web.Mvc.ActionResult Alternativ_View(decimal connectLinkId, int lopnummer, string alternativnummer, string namn, string index, string status, string abonnemang, decimal serviceId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Alternativ_View);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "connectLinkId", connectLinkId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "lopnummer", lopnummer);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "alternativnummer", alternativnummer);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "namn", namn);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "index", index);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "status", status);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "abonnemang", abonnemang);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "serviceId", serviceId);
            Alternativ_ViewOverride(callInfo, connectLinkId, lopnummer, alternativnummer, namn, index, status, abonnemang, serviceId);
            return callInfo;
        }

        [NonAction]
        partial void Alternativ_EditOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, decimal connectLinkId, int lopnummer, string alternativnummer, string namn, string index, string status, string abonnemang, decimal serviceId);

        [NonAction]
        public override System.Web.Mvc.ActionResult Alternativ_Edit(decimal connectLinkId, int lopnummer, string alternativnummer, string namn, string index, string status, string abonnemang, decimal serviceId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Alternativ_Edit);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "connectLinkId", connectLinkId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "lopnummer", lopnummer);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "alternativnummer", alternativnummer);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "namn", namn);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "index", index);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "status", status);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "abonnemang", abonnemang);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "serviceId", serviceId);
            Alternativ_EditOverride(callInfo, connectLinkId, lopnummer, alternativnummer, namn, index, status, abonnemang, serviceId);
            return callInfo;
        }

        [NonAction]
        partial void Alternativ_DataOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, decimal? connectLinkId, bool original);

        [NonAction]
        public override System.Web.Mvc.JsonResult Alternativ_Data(decimal? connectLinkId, bool original)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.Alternativ_Data);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "connectLinkId", connectLinkId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "original", original);
            Alternativ_DataOverride(callInfo, connectLinkId, original);
            return callInfo;
        }

        [NonAction]
        partial void Alternativ_DataOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, StyrningsalternativViewModel styrningsalternativ);

        [NonAction]
        public override System.Web.Mvc.JsonResult Alternativ_Data(StyrningsalternativViewModel styrningsalternativ)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.Alternativ_Data);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "styrningsalternativ", styrningsalternativ);
            Alternativ_DataOverride(callInfo, styrningsalternativ);
            return callInfo;
        }

        [NonAction]
        partial void Alternativ_CreateOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, decimal serviceId, string abonnemang);

        [NonAction]
        public override System.Web.Mvc.ActionResult Alternativ_Create(decimal serviceId, string abonnemang)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Alternativ_Create);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "serviceId", serviceId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "abonnemang", abonnemang);
            Alternativ_CreateOverride(callInfo, serviceId, abonnemang);
            return callInfo;
        }

        [NonAction]
        partial void Alternativ_DeleteOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string id2, string id3, string id4);

        [NonAction]
        public override System.Web.Mvc.ActionResult Alternativ_Delete(int id, string id2, string id3, string id4)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Alternativ_Delete);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id2", id2);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id3", id3);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id4", id4);
            Alternativ_DeleteOverride(callInfo, id, id2, id3, id4);
            return callInfo;
        }

        [NonAction]
        partial void EjVerkställdaStyrningarOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult EjVerkställdaStyrningar()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EjVerkställdaStyrningar);
            EjVerkställdaStyrningarOverride(callInfo);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009
